name: Build and Release
# .github/workflows/release.yaml

on:
  release:
    types: [created]

jobs:
  releases-matrix:
    name: ReleaseGo
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, darwin]
        goarch: [amd64, arm64, arm]
        exclude:
          - goarch: arm
            goos: darwin

    steps:
    ## 1. checkout
    - uses: actions/checkout@v3

    ## 2. build frontend
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: latest
        architecture: x64
        check-latest: true
        cache: npm
        cache-dependency-path: "**/package.json"
    - name: Build Frontend
      run: |
        cd client
        npm install
        NODE_OPTIONS=--openssl-legacy-provider npm run build
        cp -pvr ../server-node/static ../server-go/

    ## 3. build go binary
    - name: Build server-go
    # - uses: wangyoucao577/go-release-action@v1.39
      uses: wangyoucao577/go-release-action@v1.52
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # goos: linux
        # goarch: amd64
        ldflags: -s -w -X main.server_version=${{github.event.release.tag_name}}
        goversion: 1.22
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        project_path: ./server-go/cloud-clip
        binary_name: cloud-clip
        # build_command: |
        #   make DEST=${BUILD_ARTIFACTS_FOLDER}

        #  env GO111MODULE=off go build -o hello
        #  env GO111MODULE=off go build -o world
        # can't use multi cmd
        # no strip cmd: use -ldflags -s -w 
        md5sum: FALSE

